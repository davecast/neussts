{"version":3,"sources":["webpack:///./src/components/Form.vue?0864","webpack:///./node_modules/@firebase/database/dist/index.cjs.js","webpack:///./node_modules/@firebase/database/node_modules/tslib/tslib.es6.js","webpack:///./src/views/Contact.vue?27af","webpack:///./src/views/Contact.vue?f7ee","webpack:///./src/components/Form.vue?8f89","webpack:///./src/api.js","webpack:///src/components/Form.vue","webpack:///./src/components/Form.vue?fc06","webpack:///./src/components/Form.vue?932d","webpack:///src/views/Contact.vue","webpack:///./src/views/Contact.vue?5b1c","webpack:///./src/views/Contact.vue?6aac"],"names":["_interopDefault","ex","Object","defineProperty","exports","value","firebase","tslib","util","logger$1","component","DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","removeItem","prefixedName_","setItem","stringify","get","storedVal","getItem","jsonEval","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","contains","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","Logger","LUIDGenerator","id","sha1","str","utf8Bytes","stringToByteArray","Sha1","update","sha1Bytes","digest","base64","encodeByteArray","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","assert","logLevel","LogLevel","VERBOSE","log","bind","logWrapper","prefix","__spread","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","isNodeSdk","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","ebits","fbits","bias","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","ValidationPath","errorPrefix_","parts_","byteLength_","max","stringLength","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","__values","_c","next","done","segment","kv","e_1_1","return","call","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","parts","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","validateArgCount","validateCallback","deferred","Deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","__extends","val","isDefinedOn","assertionError","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","safeGet","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","__assign","newIndexes","addToIndexes","_this","map","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","__referenceConstructor","OperationType","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","validateContextObject","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","safeToRemove","delete","forEachTree","prefixPath","func","generateWithValues","values","Date","getTime","resolveDeferredValue","serverValues","resolveDeferredValueTree","resolvedTree","resolveDeferredValueSnapshot","rawPri","leafNode","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","calcCompleteEventCache","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","existing","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","__read","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","op","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","AuthTokenProvider","app_","authProvider_","auth_","getImmediate","then","auth","getToken","forceRefresh","Promise","addTokenChangeListener","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","notifyForInvalidToken","errorMessage","options","StatsCollection","counters_","incrementCounter","amount","deepCopy","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","delta","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","isMobileCordova","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","base64Encode","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","CONSTANTS","NODE_ADMIN","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingPutCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","listen","currentHashFn","listenSpec","sendListen_","req","p","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","isAdmin","token_1","authMethod","isValidFormat","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","request","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","accessToken","interrupt","resume","serverTimeOffset","q","normalizedPathString","statusCode","explanation","console","_e","_f","clientName","NODE_CLIENT","isReactNative","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","querystring","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient","app","authProvider","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authTokenProvider","authOverride","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","DATABASE_URL_OPTION","FIREBASE_DATABASE_EMULATOR_HOST_VAR","RepoManager","repos_","useRestClient_","appName","dbUrl","databaseFromApp","dbEmulatorHost","createRepo","deleteRepo","appRepos","INTERNAL","DatabaseInternals","checkDeleted_","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","__awaiter","__generator","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","instance","registerComponent","Component","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","extendStatics","setPrototypeOf","__","constructor","create","assign","__rest","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","fulfilled","step","rejected","y","g","_","label","sent","trys","ops","verb","Symbol","TypeError","__exportStar","o","ar","__spreadArrays","il","jl","__await","__asyncGenerator","asyncIterator","settle","fulfill","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","__importStar","mod","__esModule","default","__importDefault","render","_vm","_h","$createElement","_self","attrs","staticClass","_v","staticRenderFns","class","form__hidden","isSend","$event","preventDefault","_m","directives","rawName","form","fullName","expression","input__error","domProps","composing","$set","_s","email","sendForm","isLoading","form__success__view","sendPost","content","formData","FormData","append","fetch","method","mode","Accept","sendMail","components","NeButton","errors","methods","fierbasePush","checked","contentBody","finally","api","checkForm","validEmail","element","re","metaInfo","title","meta","Banner","DcSection","DcForm","mounted","scrollTo"],"mappings":"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","file":"js/chunk-a67fed60.dcf46a53.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&id=bc8dc458&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=style&index=0&id=bc8dc458&scoped=true&lang=css&\"","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar firebase = _interopDefault(require('@firebase/app'));\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nvar component = require('@firebase/component');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), util.stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return util.jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (util.contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new logger$1.Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = util.stringToByteArray(str);\r\n    var sha1 = new util.Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return util.base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += util.stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    util.assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = logger$1.LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, tslib.__spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (util.isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + util.stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return util.stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += util.stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    util.assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += util.stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += util.stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= util.stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param {string} host Hostname portion of the url for the repo\r\n     * @param {boolean} secure Whether or not this repo is accessed over ssl\r\n     * @param {string} namespace The namespace represented by the repo\r\n     * @param {boolean} webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param {string=} persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        util.assert(typeof type === 'string', 'typeof type must == string');\r\n        util.assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = tslib.__values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{repoInfo: !RepoInfo, path: !Path}}\r\n */\r\nvar parseRepoInfo = function (dataURL) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = dataURL.length;\r\n        }\r\n        var parts = host.split('.');\r\n        if (parts.length === 3) {\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            domain = parts[1];\r\n            subdomain = parts[0].toLowerCase();\r\n            // We interpret the subdomain of a 3 component URL as the namespace name.\r\n            namespace = subdomain;\r\n        }\r\n        else if (parts.length === 2) {\r\n            domain = parts[0];\r\n        }\r\n        else if (parts[0].slice(0, colonInd).toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            util.contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(util.errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        util.stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix = util.errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(util.errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        util.validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        util.validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        util.validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        util.validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        util.validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        util.validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        util.validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        util.validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        util.assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        util.assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw util.assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        util.assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        util.assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && util.contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        util.assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    util.assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        util.assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            util.assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            util.assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        util.assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        util.assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            util.assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = util.safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return util.contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        util.assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = tslib.__assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = tslib.__assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = util.safeGet(_this.indexSet_, indexName);\r\n            util.assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = util.map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            util.assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        util.assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            util.assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    tslib.__extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    util.assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (util.contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    tslib.__extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        util.assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        util.validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        util.validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        util.validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        util.validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        util.validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        util.validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        util.validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        util.validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        util.validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        util.validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        util.validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            util.stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return util.contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        util.assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            util.assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            util.assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        util.validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        util.validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        util.validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        util.validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        util.validateCallback('Query.off', 2, callback, true);\r\n        util.validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        util.validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        util.validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new util.Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        util.validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        util.validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        util.validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        util.validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        util.validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        util.validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        util.validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        util.validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        util.validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        util.validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        util.validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            util.validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            util.validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(util.errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredValue = function (\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nvalue, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    else {\r\n        util.assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n        return serverValues[value['.sv']];\r\n    }\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!SparseSnapshotTree} tree\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (tree, serverValues) {\r\n    var resolvedTree = new SparseSnapshotTree();\r\n    tree.forEachTree(new Path(''), function (path, node) {\r\n        resolvedTree.remember(path, resolveDeferredValueSnapshot(node, serverValues));\r\n    });\r\n    return resolvedTree;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredValue(rawPri, serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredValue(leafNode.getValue(), serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValueSnapshot(childNode, serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        util.assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            util.assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            util.assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            util.assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        util.assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    util.assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        util.assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        util.assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw util.assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/class-name-casing\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        util.assert(viewCache\r\n            .getEventCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        util.assert(viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                util.assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw util.assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap\r\n                    .getNode()\r\n                    .getPriority()\r\n                    .equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                util.assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    util.assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache\r\n            .getServerCache()\r\n            .getNode()\r\n            .isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    util.assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache\r\n                    .getEventCache()\r\n                    .getNode()\r\n                    .hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw util.assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            util.assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            util.assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            util.assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        util.assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            util.assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            util.assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            util.assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = tslib.__values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = tslib.__read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view\r\n                            .getQuery()\r\n                            .getQueryParams()\r\n                            .loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view\r\n                        .getQuery()\r\n                        .getQueryParams()\r\n                        .loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = tslib.__values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view\r\n                    .getQuery()\r\n                    .getQueryParams()\r\n                    .loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                util.assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        util.assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        util.assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        util.assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = util.safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    throw util.assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            util.assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. The location must have a listener above\r\n     * it, but as this is only used by transaction code, that should always be the case anyways.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            util.assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        util.assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        util.assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar AuthTokenProvider = /** @class */ (function () {\r\n    function AuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    AuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    AuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    AuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    AuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return AuthTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!util.contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return util.deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = tslib.__assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && util.contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        util.assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = tslib.__spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        util.assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    tslib.__extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !util.isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        util.assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId An identifier for this connection, used for logging\r\n     * @param {RepoInfo} repoInfo The info for the endpoint to send data to.\r\n     * @param {string=} transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param {string=}  lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = tslib.__read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (util.isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = util.base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (util.isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = util.stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!util.isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (util.isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param {string} connId identifier for this transport\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!util.isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (util.isNodeSdk()) {\r\n                var device = util.CONSTANTS.NODE_ADMIN ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                this.mySock = new WebSocketImpl(this.connURL);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = util.jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        util.assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = util.stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = tslib.__values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} id - an id for this connection\r\n     * @param {!RepoInfo} repoInfo_ - the info for the endpoint to connect to\r\n     * @param {function(Object)} onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param {function(number, string)} onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param {function()} onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param {function(string)} onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param {string=} lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    tslib.__extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !util.isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(util.stringify(msg));\r\n        util.assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        util.assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && util.contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = util.safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' +\r\n                    query\r\n                        .getQueryParams()\r\n                        .getIndex()\r\n                        .toString() +\r\n                    '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || util.isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = util.isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        util.assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + util.stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                util.stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        util.assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                util.assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (util.CONSTANTS.NODE_ADMIN) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (util.isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = tslib.__values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (util.CONSTANTS.NODE_ADMIN) {\r\n            clientName = 'admin_node';\r\n        }\r\n        else if (util.CONSTANTS.NODE_CLIENT) {\r\n            clientName = 'node';\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (util.isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (util.isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return util.isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    tslib.__extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            util.assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (util.safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                util.querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = util.jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient, app, authProvider) {\r\n        var _this = this;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.app = app;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        var authTokenProvider = new AuthTokenProvider(app, authProvider);\r\n        this.stats_ = StatsManager.getCollection(repoInfo_);\r\n        if (forceRestClient || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), authTokenProvider);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    util.stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), authTokenProvider, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        authTokenProvider.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = util.map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            var newNodeUnresolved = nodeFromJSON$1(changedValue);\r\n            changedChildren[changedKey] = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = resolveDeferredValueTree(this.onDisconnect_, serverValues);\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (util.isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, tslib.__spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        util.assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        util.assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        util.assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        util.assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            util.assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = util.stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = util.stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + util.stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = util.stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + util.stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    tslib.__extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        util.validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        util.validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        util.validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        util.validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        util.validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        util.validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        util.validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        util.validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        util.validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        util.validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        util.validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        util.validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        util.validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        util.validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        util.validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw 'Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.';\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new util.Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        util.validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        util.validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new util.Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        util.validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        util.validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = util.safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        util.assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = util.contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            util.contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = util.safeGet(newVal, '.priority');\r\n            util.assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        util.assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        util.assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        util.assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        util.contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                util.assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                util.assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** @const {string} */\r\nvar DATABASE_URL_OPTION = 'databaseURL';\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = tslib.__values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, tslib.__values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url) {\r\n        var dbUrl = url || app.options[DATABASE_URL_OPTION];\r\n        if (dbUrl === undefined) {\r\n            fatal(\"Can't determine Firebase Database URL.  Be sure to include \" +\r\n                DATABASE_URL_OPTION +\r\n                ' option when calling firebase.initializeApp().');\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = util.safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || util.safeGet(appRepos, repo.repoInfo_.toURLString()) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.repoInfo_.toURLString()];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authProvider) {\r\n        var appRepos = util.safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = util.safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repo_\r\n     */\r\n    function Database(repo_) {\r\n        this.repo_ = repo_;\r\n        if (!(repo_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n        /** @type {Reference} */\r\n        this.root_ = new Reference(repo_, Path.Empty);\r\n        this.INTERNAL = new DatabaseInternals(this);\r\n    }\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        util.validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        util.validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repo_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        util.validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        util.validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        }\r\n    };\r\n    return Database;\r\n}());\r\nvar DatabaseInternals = /** @class */ (function () {\r\n    /** @param {!Database} database */\r\n    function DatabaseInternals(database) {\r\n        this.database = database;\r\n    }\r\n    /** @return {Promise<void>} */\r\n    DatabaseInternals.prototype.delete = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            return tslib.__generator(this, function (_a) {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.checkDeleted_('delete');\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                RepoManager.getInstance().deleteRepo(this.database.repo_);\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.repo_ = null;\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                this.database.root_ = null;\r\n                this.database.INTERNAL = null;\r\n                this.database = null;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return DatabaseInternals;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.5.22\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new component.Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (util.isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexports.DataSnapshot = DataSnapshot;\nexports.Database = Database;\nexports.OnDisconnect = OnDisconnect;\nexports.Query = Query;\nexports.Reference = Reference;\nexports.ServerValue = ServerValue;\nexports.enableLogging = enableLogging;\nexports.registerDatabase = registerDatabase;\n//# sourceMappingURL=index.cjs.js.map\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=style&index=0&id=3bf7f3c5&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=style&index=0&id=3bf7f3c5&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('Banner',{attrs:{\"type\":\"small\",\"img\":\"contact-banner.jpg\"}},[_c('h2',{staticClass:\"banner__title--medium banner__title--separator text--white text--muli text--extrabold mb--x3\"},[_vm._v(\" CONTACT \")]),_c('p',{staticClass:\"banner__title--text text--white text--normal m--none\"},[_vm._v(\" Write us to know how to help you with your current or future projects, and we will get in touch to talk a little. \")])]),_c('DcSection',{staticClass:\"back--white\",attrs:{\"backgroundImage\":\"exp_back.png\",\"attached\":\"\"}},[_c('div',{staticClass:\"container\"},[_c('p',{staticClass:\"text--big text--grey--a mb--x3 text--center\"},[_vm._v(\" We make efficient and effective decisions for your business. \")]),_c('p',{staticClass:\"text--normal text--grey--a text--center content--768--center\"},[_vm._v(\" Offering solutions to the problems facing your company in the Operations, Production, Maintenance and Acquisitions processes. \")])])]),_c('DcSection',{staticClass:\"back--white\"},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"grid grid_5_4_\"},[_c('div',{staticClass:\"contact__form\"},[_c('h2',{staticClass:\"contact__form--title text--yellow  mb--x1 text--cebter--tb\"},[_vm._v(\" ENTER YOUR REQUEST. \")]),_c('p',{staticClass:\"contact__form--text text--normal text--grey--c mb--x2 text--cebter--tb\"},[_vm._v(\" We will be pleased to answer any questions. \")]),_c('DcForm')],1),_c('div',{staticClass:\"contact__info\"},[_c('h2',{staticClass:\"contact__form--title text--black  mb--x1 text--cebter--tb\"},[_vm._v(\" WHERE WE ARE \")]),_c('p',{staticClass:\"contact__form--text text--normal text--grey--c mb--x2 text--cebter--tb\"},[_vm._v(\" Contact us we waiting for your. \")]),_c('div',{staticClass:\"map\"},[_c('figure',{staticClass:\"map__image\"},[_c('img',{attrs:{\"src\":require(\"@/assets/mapa__americas.png\"),\"alt\":\"Where we are\"}})]),_c('figure',{staticClass:\"map__country map__venezuela\"},[_c('img',{attrs:{\"src\":require(\"@/assets/mapa__venezuela.png\")}})]),_c('figure',{staticClass:\"map__country map__canada\"},[_c('img',{attrs:{\"src\":require(\"@/assets/mapa__canada.png\")}})]),_c('figure',{staticClass:\"map__country map__colombia\"},[_c('img',{attrs:{\"src\":require(\"@/assets/mapa__colombia.png\")}})]),_c('figure',{staticClass:\"map__country map__peru\"},[_c('img',{attrs:{\"src\":require(\"@/assets/mapa__peru.png\")}})]),_c('figure',{staticClass:\"map__flag flag__venezuela\"},[_c('img',{attrs:{\"src\":require(\"@/assets/venezuela.png\")}})]),_c('figure',{staticClass:\"map__flag flag__canada\"},[_c('img',{attrs:{\"src\":require(\"@/assets/canada.png\")}})]),_c('figure',{staticClass:\"map__flag flag__colombia\"},[_c('img',{attrs:{\"src\":require(\"@/assets/colombia.png\")}})]),_c('figure',{staticClass:\"map__flag flag__peru\"},[_c('img',{attrs:{\"src\":require(\"@/assets/peru.png\")}})])])])])])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('form',{staticClass:\"form\",class:{ form__hidden: _vm.isSend },on:{\"submit\":function($event){$event.preventDefault();}}},[_c('div',{staticClass:\"form__control\"},[_vm._m(0),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.fullName.data),expression:\"form.fullName.data\"}],staticClass:\"input\",class:{ input__error: _vm.form.fullName.error.has },attrs:{\"name\":\"fullName\",\"id\":\"fullName\",\"placeholder\":\"Full Name\"},domProps:{\"value\":(_vm.form.fullName.data)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form.fullName, \"data\", $event.target.value)}}}),(_vm.form.fullName.error.has)?_c('span',{staticClass:\"error\"},[_vm._v(_vm._s(_vm.form.fullName.error.message))]):_vm._e()]),_c('div',{staticClass:\"form__control\"},[_vm._m(1),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.email.data),expression:\"form.email.data\"}],staticClass:\"input\",class:{ input__error: _vm.form.email.error.has },attrs:{\"name\":\"email\",\"id\":\"email\",\"placeholder\":\"Email\"},domProps:{\"value\":(_vm.form.email.data)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form.email, \"data\", $event.target.value)}}}),(_vm.form.email.error.has)?_c('span',{staticClass:\"error\"},[_vm._v(_vm._s(_vm.form.email.error.message))]):_vm._e()]),_c('div',{staticClass:\"form__control\"},[_vm._m(2),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.form.message.data),expression:\"form.message.data\"}],staticClass:\"textarea\",class:{ input__error: _vm.form.message.error.has },attrs:{\"name\":\"message\",\"id\":\"message\",\"cols\":\"40\",\"rows\":\"5\",\"placeholder\":\"Message\"},domProps:{\"value\":(_vm.form.message.data)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.$set(_vm.form.message, \"data\", $event.target.value)}}}),(_vm.form.message.error.has)?_c('span',{staticClass:\"error\"},[_vm._v(_vm._s(_vm.form.message.error.message))]):_vm._e()]),_c('div',{staticClass:\"form__control\"},[_c('NeButton',{attrs:{\"onClickable\":\"\",\"color\":\"2d2d2d\",\"background\":\"EFDC30\",\"align\":\"left\"},on:{\"custom-click\":_vm.sendForm}},[_vm._v(\" send your request \")])],1),(_vm.isLoading)?_c('div',{staticClass:\"form__loader\"},[_c('bar-loader',{staticClass:\"form__loader--spiner\",attrs:{\"color\":'#2d2d2d',\"loading\":_vm.isLoading && !_vm.isSend,\"size\":200,\"height\":6}}),(_vm.isSend)?_c('span',{staticClass:\"form__success\",class:{ form__success__view: _vm.isSend }},[_c('i',{staticClass:\"wz-icon wz-check-double\"}),_vm._v(\" Thank you, we will contact you soon\")]):_vm._e()],1):_vm._e()])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:\"label text--smal text--black\",attrs:{\"for\":\"fullName\"}},[_vm._v(\"Full name \"),_c('span',[_vm._v(\"*\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:\"label text--smal text--black\",attrs:{\"for\":\"email\"}},[_vm._v(\"Business Email \"),_c('span',[_vm._v(\"*\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{staticClass:\"label text--smal text--black\",attrs:{\"for\":\"message\"}},[_vm._v(\"Message \"),_c('span',[_vm._v(\"*\")])])}]\n\nexport { render, staticRenderFns }","const url = \"https://davecastworks.com/mailer/\";\r\n\r\nfunction sendPost(content) {\r\n  let formData = new FormData();\r\n  formData.append(\"fullname\", content.fullName);\r\n  formData.append(\"email\", content.email);\r\n  formData.append(\"message\", content.message);\r\n  return fetch(url, {\r\n    method: \"POST\",\r\n    mode: \"no-cors\",\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-url-encoded\",\r\n      Accept: \"application/json\"\r\n    },\r\n    body: formData\r\n  });\r\n}\r\n\r\nfunction sendMail(content) {\r\n  console.log(\"send\");\r\n  let formData = new FormData();\r\n  formData.append(\"email\", content.email);\r\n  formData.append(\"b_c7d8954ec0e4f6a1cd4a53b50_48d74c72d8\", content.code);\r\n  return fetch(\r\n    \"https://neuss-ts.us19.list-manage.com/subscribe/post?u=c7d8954ec0e4f6a1cd4a53b50&amp;id=48d74c72d8\",\r\n    {\r\n      method: \"POST\",\r\n      mode: \"no-cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/x-www-form-url-encoded\",\r\n        Accept: \"application/json\"\r\n      },\r\n      body: formData\r\n    }\r\n  );\r\n}\r\n//function sendPost(content) {\r\n// console.log(content);\r\n//return fetch(`${url}?email=${content.email}&?name=${content.fitst}`);\r\n//return fetch(url);\r\n//}\r\n\r\nexport default {\r\n  sendPost,\r\n  sendMail\r\n};\r\n","<template>\r\n  <form class=\"form\" :class=\"{ form__hidden: isSend }\" @submit.prevent>\r\n    <div class=\"form__control\">\r\n      <label for=\"fullName\" class=\"label text--smal text--black\"\r\n        >Full name <span>*</span></label\r\n      >\r\n      <input\r\n        class=\"input\"\r\n        name=\"fullName\"\r\n        id=\"fullName\"\r\n        v-model=\"form.fullName.data\"\r\n        placeholder=\"Full Name\"\r\n        :class=\"{ input__error: form.fullName.error.has }\"\r\n      />\r\n      <span v-if=\"form.fullName.error.has\" class=\"error\">{{\r\n        form.fullName.error.message\r\n      }}</span>\r\n    </div>\r\n    <div class=\"form__control\">\r\n      <label for=\"email\" class=\"label text--smal text--black\"\r\n        >Business Email <span>*</span></label\r\n      >\r\n      <input\r\n        class=\"input\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        v-model=\"form.email.data\"\r\n        placeholder=\"Email\"\r\n        :class=\"{ input__error: form.email.error.has }\"\r\n      />\r\n      <span v-if=\"form.email.error.has\" class=\"error\">{{\r\n        form.email.error.message\r\n      }}</span>\r\n    </div>\r\n    <div class=\"form__control\">\r\n      <label for=\"message\" class=\"label text--smal text--black\"\r\n        >Message <span>*</span></label\r\n      >\r\n      <textarea\r\n        name=\"message\"\r\n        id=\"message\"\r\n        v-model=\"form.message.data\"\r\n        cols=\"40\"\r\n        rows=\"5\"\r\n        class=\"textarea\"\r\n        placeholder=\"Message\"\r\n        :class=\"{ input__error: form.message.error.has }\"\r\n      ></textarea>\r\n      <span v-if=\"form.message.error.has\" class=\"error\">{{\r\n        form.message.error.message\r\n      }}</span>\r\n    </div>\r\n    <div class=\"form__control\">\r\n      <NeButton\r\n        @custom-click=\"sendForm\"\r\n        onClickable\r\n        color=\"2d2d2d\"\r\n        background=\"EFDC30\"\r\n        align=\"left\"\r\n      >\r\n        send your request\r\n      </NeButton>\r\n    </div>\r\n    <div v-if=\"isLoading\" class=\"form__loader\">\r\n      <bar-loader\r\n        class=\"form__loader--spiner\"\r\n        :color=\"'#2d2d2d'\"\r\n        :loading=\"isLoading && !isSend\"\r\n        :size=\"200\"\r\n        :height=\"6\"\r\n      ></bar-loader>\r\n      <span\r\n        class=\"form__success\"\r\n        :class=\"{ form__success__view: isSend }\"\r\n        v-if=\"isSend\"\r\n        ><i class=\"wz-icon wz-check-double\"></i> Thank you, we will contact you\r\n        soon</span\r\n      >\r\n    </div>\r\n  </form>\r\n</template>\r\n\r\n<script>\r\nimport api from \"@/api\";\r\n\r\nimport NeButton from \"@/components/Button.vue\";\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nexport default {\r\n  name: \"Form\",\r\n  components: {\r\n    NeButton\r\n  },\r\n  data() {\r\n    return {\r\n      errors: [],\r\n      isSend: false,\r\n      isLoading: false,\r\n      form: {\r\n        fullName: {\r\n          data: \"\",\r\n          error: {\r\n            has: false,\r\n            message: \"\"\r\n          }\r\n        },\r\n        email: {\r\n          data: \"\",\r\n          error: {\r\n            has: false,\r\n            message: \"\"\r\n          }\r\n        },\r\n        message: {\r\n          data: \"\",\r\n          error: {\r\n            has: false,\r\n            message: \"\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    fierbasePush(body) {\r\n      return firebase\r\n        .database()\r\n        .ref(\"requests\")\r\n        .push()\r\n        .set(body);\r\n    },\r\n    sendForm() {\r\n      let checked = this.checkForm();\r\n      if (checked) {\r\n        let contentBody = {\r\n          fullName: this.form.fullName.data,\r\n          email: this.form.email.data,\r\n          message: this.form.message.data\r\n        };\r\n        this.isLoading = true;\r\n\r\n        this.fierbasePush(contentBody).finally(() => {\r\n          api.sendPost(contentBody).finally(() => (this.isSend = true));\r\n        });\r\n      }\r\n    },\r\n    checkForm() {\r\n      this.errors = [];\r\n\r\n      if (!this.form.fullName.data) {\r\n        this.form.fullName.error.message = \"First name is required field\";\r\n        this.form.fullName.error.has = true;\r\n      } else {\r\n        this.form.fullName.error.has = false;\r\n        this.form.fullName.error.message = \"\";\r\n      }\r\n      if (!this.form.email.data) {\r\n        this.form.email.error.has = true;\r\n        this.form.email.error.message = \"Business email is required field\";\r\n      } else {\r\n        if (!this.validEmail(this.form.email.data)) {\r\n          this.form.email.error.has = true;\r\n          this.form.email.error.message = \"Please use a correct email format\";\r\n        } else {\r\n          this.form.email.error.has = false;\r\n          this.form.email.error.message = \"\";\r\n        }\r\n      }\r\n      if (!this.form.message.data) {\r\n        this.form.message.error.has = true;\r\n        this.form.message.error.message = \"Comments is required field\";\r\n      } else {\r\n        this.form.message.error.has = false;\r\n        this.form.message.error.message = \"\";\r\n      }\r\n\r\n      for (const key in this.form) {\r\n        const element = this.form[key];\r\n        if (element.error.has) {\r\n          this.errors.push(element);\r\n        }\r\n      }\r\n\r\n      if (!this.errors.length) {\r\n        return true;\r\n      }\r\n    },\r\n    validEmail(email) {\r\n      // eslint-disable-next-line no-use-before-define\r\n      var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(email);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form__success {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  line-height: 18px;\r\n  color: #2d2d2d;\r\n  transform: translateY(15px);\r\n  opacity: 0;\r\n  transition: all 0.3s ease-out 0.2s;\r\n}\r\n.form__success i {\r\n  width: 30px;\r\n  height: 30px;\r\n  font-size: 16px;\r\n  line-height: 16px;\r\n  display: flex;\r\n  border: 2px solid #4caf50;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 30px;\r\n  margin-bottom: 20px;\r\n  color: #4caf50;\r\n}\r\n.form__success__view {\r\n  transform: translateY(0px);\r\n  opacity: 1;\r\n}\r\n.form__loader {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-bottom: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: rgba(255, 255, 255, 0.75);\r\n  box-sizing: border-box;\r\n  border: 1px solid #cccccc;\r\n}\r\n.form {\r\n  background-color: #efefef;\r\n  padding: 40px 30px;\r\n  position: relative;\r\n  opacity: 1;\r\n  transition: all 0.3s ease-in;\r\n}\r\n.form__control {\r\n  margin-bottom: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  opacity: 1;\r\n  transition: all 0.3s ease-in;\r\n}\r\n.form__hidden .form__control {\r\n  transform: translateY(15px);\r\n  opacity: 0;\r\n}\r\n.label {\r\n  display: block;\r\n}\r\n.label span {\r\n  color: rgba(247, 45, 45, 0.898);\r\n}\r\ninput,\r\ntextarea {\r\n  appearance: none;\r\n  border: none;\r\n  background: none;\r\n  border-bottom: 1px solid #2d2d2d;\r\n  width: 100%;\r\n  padding: 10px 0;\r\n  font-size: 18px;\r\n  font-family: \"Muli\", sans-serif;\r\n  color: #d6c600;\r\n  outline: none;\r\n  box-shadow: none;\r\n}\r\n.input::placeholder,\r\n.textarea::placeholder {\r\n  color: #d6c600;\r\n}\r\n.textarea {\r\n  resize: none;\r\n}\r\n.input__error {\r\n  color: #ff9292;\r\n}\r\n.input__error::placeholder {\r\n  color: #ff9292;\r\n}\r\n.error {\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  color: #d00000;\r\n  display: block;\r\n  height: 22px;\r\n  background: #ffd3d3;\r\n  padding: 4px 10px;\r\n  box-sizing: border-box;\r\n}\r\n@media screen and (max-width: 768px) {\r\n  .form__success {\r\n    padding: 10px;\r\n    line-height: 24px !important;\r\n    text-align: center;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=bc8dc458&scoped=true&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Form.vue?vue&type=style&index=0&id=bc8dc458&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"bc8dc458\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n    <Banner type=\"small\" img=\"contact-banner.jpg\">\r\n      <h2\r\n        class=\"banner__title--medium banner__title--separator text--white text--muli text--extrabold mb--x3\"\r\n      >\r\n        CONTACT\r\n      </h2>\r\n      <p class=\"banner__title--text text--white text--normal m--none\">\r\n        Write us to know how to help you with your current or future projects,\r\n        and we will get in touch to talk a little.\r\n      </p>\r\n    </Banner>\r\n    <DcSection class=\"back--white\" backgroundImage=\"exp_back.png\" attached>\r\n      <div class=\"container\">\r\n        <p class=\"text--big text--grey--a mb--x3 text--center\">\r\n          We make efficient and effective decisions for your business.\r\n        </p>\r\n        <p class=\"text--normal text--grey--a text--center content--768--center\">\r\n          Offering solutions to the problems facing your company in the\r\n          Operations, Production, Maintenance and Acquisitions processes.\r\n        </p>\r\n      </div>\r\n    </DcSection>\r\n    <DcSection class=\"back--white\">\r\n      <div class=\"container\">\r\n        <div class=\"grid grid_5_4_\">\r\n          <div class=\"contact__form\">\r\n            <h2\r\n              class=\"contact__form--title text--yellow  mb--x1 text--cebter--tb\"\r\n            >\r\n              ENTER YOUR REQUEST.\r\n            </h2>\r\n            <p\r\n              class=\"contact__form--text text--normal text--grey--c mb--x2 text--cebter--tb\"\r\n            >\r\n              We will be pleased to answer any questions.\r\n            </p>\r\n            <DcForm />\r\n          </div>\r\n          <div class=\"contact__info\">\r\n            <h2\r\n              class=\"contact__form--title text--black  mb--x1 text--cebter--tb\"\r\n            >\r\n              WHERE WE ARE\r\n            </h2>\r\n            <p\r\n              class=\"contact__form--text text--normal text--grey--c mb--x2 text--cebter--tb\"\r\n            >\r\n              Contact us we waiting for your.\r\n            </p>\r\n            <div class=\"map\">\r\n              <figure class=\"map__image\">\r\n                <img src=\"@/assets/mapa__americas.png\" alt=\"Where we are\" />\r\n              </figure>\r\n              <figure class=\"map__country map__venezuela\">\r\n                <img src=\"@/assets/mapa__venezuela.png\" />\r\n              </figure>\r\n              <figure class=\"map__country map__canada\">\r\n                <img src=\"@/assets/mapa__canada.png\" />\r\n              </figure>\r\n              <figure class=\"map__country map__colombia\">\r\n                <img src=\"@/assets/mapa__colombia.png\" />\r\n              </figure>\r\n              <figure class=\"map__country map__peru\">\r\n                <img src=\"@/assets/mapa__peru.png\" />\r\n              </figure>\r\n              <figure class=\"map__flag flag__venezuela\">\r\n                <img src=\"@/assets/venezuela.png\" />\r\n              </figure>\r\n              <figure class=\"map__flag flag__canada\">\r\n                <img src=\"@/assets/canada.png\" />\r\n              </figure>\r\n              <figure class=\"map__flag flag__colombia\">\r\n                <img src=\"@/assets/colombia.png\" />\r\n              </figure>\r\n              <figure class=\"map__flag flag__peru\">\r\n                <img src=\"@/assets/peru.png\" />\r\n              </figure>\r\n            </div>\r\n            <!--<ul class=\"info\">\r\n              <li>\r\n                <i class=\"wz-icon wz-envelope\"></i>\r\n                info@neuss-ts.com\r\n              </li>\r\n            </ul>\r\n            <ContactWorld\r\n              name=\"canada\"\r\n              flag=\"canada.png\"\r\n              address=\"37 Estelle-MAuffette Notre Dame De L'Ile-Perrot (QC) J7V 9R8\"\r\n              rif=\"883844774783\"\r\n            />\r\n            <ContactWorld\r\n              name=\"peru\"\r\n              flag=\"peru.png\"\r\n              address=\"440 Los Castallos, San Isidro Lima - 25\"\r\n              rif=\"883844774783\"\r\n            />\r\n            <ContactWorld\r\n              name=\"colombia\"\r\n              flag=\"colombia.png\"\r\n              address=\"Calle 7B, Edif. Altos de Bella Suiza Bella Suiza - Bogota\"\r\n              rif=\"883844774783\"\r\n            />\r\n            <ContactWorld\r\n              name=\"venezuela\"\r\n              flag=\"venezuela.png\"\r\n              address=\"Centro Empresarial Colon, Piso 2 Lecherias\"\r\n              rif=\"883844774783\"\r\n            />-->\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </DcSection>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Banner from \"@/components/Banner.vue\";\r\nimport DcForm from \"@/components/Form.vue\";\r\n//import Title from \"@/components/NeTitle.vue\";\r\n//import ContactWorld from \"@/components/ContactWorld.vue\";\r\n\r\nimport DcSection from \"@/layouts/DcSection.vue\";\r\n\r\nexport default {\r\n  metaInfo: {\r\n    title: \"Contact\",\r\n    meta: [\r\n      {\r\n        name: \"description\",\r\n        hid: \"description\",\r\n        content:\r\n          \"Write us to know how to help you with your current or future projects, and we will get in touch to talk a little.\"\r\n      },\r\n      // Open Graph\r\n      { name: \"og:title\", content: \"Contact | Neuss Technical Services\" },\r\n      {\r\n        name: \"og:description\",\r\n        content:\r\n          \"Write us to know how to help you with your current or future projects, and we will get in touch to talk a little.\"\r\n      },\r\n      { name: \"og:type\", content: \"website\" },\r\n      { name: \"og:url\", content: \"https://www.neuss-ts.com/\" },\r\n      { name: \"og:image\", content: \"https://davecastworks.com/meta_640.jpg\" },\r\n      // Twitter Card\r\n      { name: \"twitter:card\", content: \"summary\" },\r\n      { name: \"twitter:site\", content: \"@neussts\" },\r\n      {\r\n        name: \"twitter:title\",\r\n        content: \"Contact | Neuss Technical Services\"\r\n      },\r\n      {\r\n        name: \"twitter:description\",\r\n        content:\r\n          \"Write us to know how to help you with your current or future projects, and we will get in touch to talk a little.\"\r\n      },\r\n      {\r\n        name: \"twitter:image\",\r\n        content: \"https://davecastworks.com/meta_640.jpg\"\r\n      },\r\n      { name: \"twitter:image:alt\", content: \"NeussTS Logo\" }\r\n    ]\r\n  },\r\n  name: \"Experience\",\r\n  components: {\r\n    Banner,\r\n    DcSection,\r\n    DcForm\r\n  },\r\n  data() {\r\n    return {};\r\n  },\r\n  mounted() {\r\n    window.scrollTo(0, 0);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.grid_5_4_ {\r\n  grid-template: 1fr / repeat(12, 1fr);\r\n  grid-template-areas: \". form form form form form . info info info info .\";\r\n}\r\n.contact__form {\r\n  grid-area: form;\r\n}\r\n.contact__info {\r\n  grid-area: info;\r\n}\r\n.contact__form--title {\r\n  font-size: 28px;\r\n  line-height: 32px;\r\n  text-transform: uppercase;\r\n  font-weight: 900;\r\n}\r\n.info {\r\n  margin-bottom: 30px;\r\n}\r\n.info ul {\r\n}\r\n.info li {\r\n  color: #aaaaaa;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  display: grid;\r\n  grid-template: 1fr / 25px 1fr;\r\n}\r\n.info i {\r\n  margin-top: 2px;\r\n}\r\n.map {\r\n  width: 400px;\r\n  position: relative;\r\n}\r\n.map__image {\r\n  max-width: 100%;\r\n}\r\n.map__image img {\r\n  width: 100%;\r\n}\r\n.map__country {\r\n  position: absolute;\r\n}\r\n.map__country img {\r\n  max-width: 100%;\r\n}\r\n.map__venezuela {\r\n  width: 46.56px;\r\n  top: 287px;\r\n  right: 117px;\r\n}\r\n.map__canada {\r\n  width: 263.67px;\r\n  top: 26px;\r\n  left: 109px;\r\n}\r\n.map__peru {\r\n  width: 46.56px;\r\n  bottom: 166px;\r\n  left: 207.5px;\r\n}\r\n.map__colombia {\r\n  width: 43.76px;\r\n  bottom: 219px;\r\n  left: 216px;\r\n}\r\n.map__flag {\r\n  position: absolute;\r\n  width: 25px;\r\n}\r\n.map__flag img {\r\n  max-width: 100%;\r\n}\r\n.flag__canada {\r\n  top: 100px;\r\n  left: 180px;\r\n}\r\n.flag__colombia {\r\n  bottom: 240px;\r\n  right: 150px;\r\n}\r\n.flag__peru {\r\n  bottom: 190px;\r\n  right: 156px;\r\n}\r\n.flag__venezuela {\r\n  bottom: 255px;\r\n  right: 124px;\r\n}\r\n@media screen and (max-width: 980px) {\r\n  .grid_5_4_ {\r\n    grid-template-areas: \"form form form form form form form . info info info info\";\r\n  }\r\n}\r\n@media screen and (max-width: 768px) {\r\n  .grid_5_4_ {\r\n    grid-template-areas:\r\n      \"info info info info info info info info info info info info\"\r\n      \"form form form form form form form form form form form form\";\r\n  }\r\n  .map {\r\n    margin: 0 auto;\r\n  }\r\n}\r\n@media screen and (max-width: 595px) {\r\n  .contact__form--title {\r\n    font-size: 22px;\r\n    line-height: 22px;\r\n  }\r\n}\r\n@media screen and (max-width: 380px) {\r\n  .map {\r\n    width: 300px;\r\n  }\r\n  .map__venezuela {\r\n    width: 34.93px;\r\n    top: 215px;\r\n    right: 88px;\r\n  }\r\n  .map__canada {\r\n    width: 197.78px;\r\n    top: 20px;\r\n    left: 80px;\r\n  }\r\n  .map__colombia {\r\n    width: 32.82px;\r\n    bottom: 165px;\r\n    left: 160px;\r\n  }\r\n  .map__peru {\r\n    width: 34.93px;\r\n    bottom: 124px;\r\n    left: 155.5px;\r\n  }\r\n  .map__flag {\r\n    width: 20px;\r\n  }\r\n  .flag__venezuela {\r\n    bottom: 192px;\r\n    right: 94px;\r\n  }\r\n  .flag__canada {\r\n    top: 75px;\r\n    left: 140px;\r\n  }\r\n  .flag__colombia {\r\n    bottom: 180px;\r\n    right: 115px;\r\n  }\r\n  .flag__peru {\r\n    bottom: 145px;\r\n    right: 120px;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Contact.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Contact.vue?vue&type=template&id=3bf7f3c5&scoped=true&\"\nimport script from \"./Contact.vue?vue&type=script&lang=js&\"\nexport * from \"./Contact.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Contact.vue?vue&type=style&index=0&id=3bf7f3c5&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3bf7f3c5\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}